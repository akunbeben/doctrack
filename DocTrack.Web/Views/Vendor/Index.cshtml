@model DocTrack.Web.ViewModel.VendorVM
@{
    ViewBag.Title = "Vendors";
}

<div class="row pt-3">
    <div class="col-xl-4">

        <!--begin::Portlet-->
        <div class="kt-portlet kt-portlet--height-fluid">
            <div class="kt-portlet__head">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">Vendors data</h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-group">
                        <button type="button" class="modal-create btn btn-primary btn-bold" onclick="onClickAdd(titleAdd, urlAddView, urlSave)">
                            <i class="flaticon2-add-1"></i> Add Vendor
                        </button>
                    </div>
                </div>
            </div>
            <div class="kt-portlet__body">

                <!--begin: Datatable -->
                <div id="kt_table_1_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                    <div class="row">
                        <div class="col-sm-12">
                            <table class="table table-striped table-bordered table-hover no-footer" id="DataTable" role="grid" aria-describedby="DataTable_info">
                                <thead>
                                    <tr role="row">
                                        <th class="sorting" tabindex="0" aria-controls="DataTable" rowspan="1" colspan="1" aria-label="Vendor Account: activate to sort column ascending">Vendor Account</th>
                                        <th class="sorting" tabindex="0" aria-controls="DataTable" rowspan="1" colspan="1" aria-label="Vendor Name: activate to sort column ascending">Vendor Name</th>
                                        <th class="sorting" tabindex="0" aria-controls="DataTable" rowspan="1" colspan="1" aria-label="Vendor Own: activate to sort column ascending">Vendor Own</th>
                                        <th class="sorting" tabindex="0" aria-controls="DataTable" rowspan="1" colspan="1" aria-label="Payment Terms: activate to sort column ascending">Payment Terms</th>
                                        <th class="sorting_disabled" rowspan="1" colspan="1" aria-label="Actions">Actions</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>

                <!--end: Datatable -->
            </div>
        </div>

        <!--end::Portlet-->
    </div>
</div>

<div class="modal fade bd-example-modal-xl" data-backdrop="static" role="dialog" id="formModal" aria-labelledby="formModal" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Vendor Form</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="modal-loading" class="text-center my-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>

                <span class="ml-2">loading...</span>
            </div>
            <div id="modal-form" class="p-0">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "input-form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    @Html.HiddenFor(model => model.Vendors.VendorId, new { id = "VendorId" })
                    <div class="modal-body">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Vendors.VendorAccount, new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Vendors.VendorAccount, new { @class = "form-control bg-secondary", @readonly = true, id = "VendorAccount" })
                                @Html.ValidationMessageFor(model => model.Vendors.VendorAccount, "", new { @class = "text-danger font-weight-light" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Vendors.VendorName, new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Vendors.VendorName, new { @class = "form-control", id = "VendorName" })
                                @Html.ValidationMessageFor(model => model.Vendors.VendorName, "", new { @class = "text-danger font-weight-light" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Vendors.VendorOwn, new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.DropDownListFor(model => model.Vendors.VendorOwn, Model.Companies, null, new { @class = "form-control", @style = "width: 100%;", id = "VendorOwn" })
                                @Html.ValidationMessageFor(model => model.Vendors.VendorOwn, "", new { @class = "text-danger font-weight-light" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Vendors.PaymentTerms, new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Vendors.PaymentTerms, new { @class = "form-control", id = "PaymentTerms" })
                                @Html.ValidationMessageFor(model => model.Vendors.PaymentTerms, "", new { @class = "text-danger font-weight-light" })
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-submit btn btn-primary" onclick="">Save</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section
    scripts {

    <script>

        var titleAdd = 'Add New Vendor',
            urlAddView = '@Url.Action("getVendor", "Vendor")',
            urlSave = '@Url.Action("Create", "Vendor")';

        var titleEdit = 'Edit Vendor',
            urlEditView = '@Url.Action("getVendor", "Vendor")/',
            urlUpdate = '@Url.Action("Update", "Vendor")/';

            var table = $('#DataTable').DataTable({
                processing: true,
                serverSide: true,
                paging: true,
                ajax: {
                    url: '@Url.Action("GetVendorDataTable", "Vendor")',
                    dataSrc: 'data',
                    type: 'POST'
                },
                columns: [
                    { name: 'VendorAccount', data: 'VendorAccount' },
                    { name: 'VendorName', data: 'VendorName' },
                    { name: 'CompanyName', data: 'CompanyName' },
                    { name: 'PaymentTerms', data: 'PaymentTerms' },
                    {
                        data: null, render: function (data, type, row) {
                            var editButton = `<button type="button" class="modal-update btn btn-primary" onclick="onClickEdit(titleEdit, urlEditView + ${row.VendorId}, urlUpdate + ${row.VendorId})"><i class="la la-edit"></i> Edit</button>&nbsp;`;
                            var deleteButton = `<button type="button" class="btn btn-danger" onclick="onClickDelete('@Url.Action("delete", "Vendor")' + '/' + ${row.VendorId})"><i class="la la-trash"></i> Delete</button>`;
                            return editButton + deleteButton;
                        }
                    }
                ],
                columnDefs: [
                    { targets: [4], orderable: false, className: "text-center", style: "max-width: 100px;"},
                ],
                initComplete: function () {
                    var input = $('.dataTables_filter input').unbind(),
                        self = this.api(),
                        searchButton = $('<button class="btn btn-primary btn-sm rounded-0">')
                            .html('<i class="kt-menu__link-icon flaticon2-search"></i> ')
                            .click(function () {
                                self.search(input.val()).draw();
                            });
                    $('.dataTables_filter').append(searchButton);
                }
            });

            function ajaxFormRequest(url) {
                $.ajax({
                    url: url,
                    type: 'POST',
                    dataType: 'json',
                    success: function (result) {
                        if (result.Status == "Success") {
                            $('#VendorId').val(result.Data.VendorId);
                            $('#VendorName').val(result.Data.VendorName);
                            $('#VendorOwn').val(result.Data.VendorOwn);
                            $('#VendorAccount').val(result.Data.VendorAccount);
                            $('#PaymentTerms').val(result.Data.PaymentTerms);

                            $('.field-validation-error').html("");
                            $("form").removeData("validator");
                            $("form").removeData("unobtrusiveValidation");

                            $('#modal-loading').hide();
                            $('#modal-form').show();
                            $.validator.unobtrusive.parse($('form'));
                        }
                    }
                })
            };
    </script>

}